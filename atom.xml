<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HuisBlog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huisblog.cn/"/>
  <updated>2017-05-02T07:45:08.000Z</updated>
  <id>http://huisblog.cn/</id>
  
  <author>
    <name>Hui Zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在博客中插入数学公式</title>
    <link href="http://huisblog.cn/2017/05/02/tex/"/>
    <id>http://huisblog.cn/2017/05/02/tex/</id>
    <published>2017-05-02T07:09:59.000Z</published>
    <updated>2017-05-02T07:45:08.000Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>

<p>Markdown本身并不支持数学公式的书写，使用<a href="https://www.mathjax.org/" target="_blank" rel="external">MathJax</a>来给我的博客插入公式只需要两步：  </p>
<ol>
<li>链接MathJax到要包含公式的网页中；  </li>
<li>将公式放入网页让MathJax可以展示它。</li>
</ol>
<p><a href="https://mathjax-chinese-doc.readthedocs.io/en/latest/start.html" target="_blank" rel="external">中文版入门指南</a><br><a id="more"></a></p>
<h2 id="到内容分发服务的安全链接"><a href="#到内容分发服务的安全链接" class="headerlink" title="到内容分发服务的安全链接"></a>到内容分发服务的安全链接</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span> <span class="keyword">async</span></div><div class="line">  src=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"</span>&gt;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h2 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a>插入公式</h2><p>行内公式使用<code>\\(...\\)</code>，两个<code>\</code>有一个是转义字符。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这是一个行内公式\\(c = a+b\\)</div></pre></td></tr></table></figure>
<p>效果是：<br>这是一个行内公式\(c = a+b\)</p>
<p>行间公式使用<code>$$...$$</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">这是一个行间公式</div><div class="line">$$ E = mc^&#123;2&#125; $$</div></pre></td></tr></table></figure>
<p>这是一个行间公式<br>$$ E = mc^{2}$$</p>
]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; async
  src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;
&lt;/script&gt;

&lt;p&gt;Markdown本身并不支持数学公式的书写，使用&lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax&lt;/a&gt;来给我的博客插入公式只需要两步：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;链接MathJax到要包含公式的网页中；  &lt;/li&gt;
&lt;li&gt;将公式放入网页让MathJax可以展示它。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://mathjax-chinese-doc.readthedocs.io/en/latest/start.html&quot;&gt;中文版入门指南&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="tool" scheme="http://huisblog.cn/tags/tool/"/>
    
      <category term="math" scheme="http://huisblog.cn/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>2013 ComParE Feature Set</title>
    <link href="http://huisblog.cn/2017/05/02/IS13feature/"/>
    <id>http://huisblog.cn/2017/05/02/IS13feature/</id>
    <published>2017-05-02T04:46:53.000Z</published>
    <updated>2017-05-02T06:07:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>This blog will introduce a well-evolved feature set for automatic recognition of audio emotion, ie. 2013 ComParE Feature Set[1]. The ComParE feature set contains <code>6373</code> features. It consists of some <code>generic acoustic emotion descriptors</code> and their <code>statistical functionals</code>.</p>
<a id="more"></a>
<h2 id="65-Acoustic-low-level-descriptors-LLDs"><a href="#65-Acoustic-low-level-descriptors-LLDs" class="headerlink" title="65 Acoustic low-level descriptors(LLDs)"></a>65 Acoustic low-level descriptors(LLDs)</h2><p>The low-level descriptors cover a broad set of descriptors from the fields of <code>speech processing</code>, <code>Music Information Retrieval</code>, and <code>general sound analysis</code>. The set includes <code>energy</code>, <code>spectral</code>, and <code>voicing related low-level descriptors (LLDs)</code> including logarithmic harmonic-to-noise ratio (HNR), spectral harmonicity, and psychoacoustic spectral sharpness. Details are shown below.[2]</p>
<h3 id="4-ENERGY-RELATED-LLD"><a href="#4-ENERGY-RELATED-LLD" class="headerlink" title="4 ENERGY RELATED LLD"></a>4 ENERGY RELATED LLD</h3><ul>
<li>Sum of auditory spectrum (loudness)</li>
<li>Sum of RASTA-style filtered auditory spectrum </li>
<li>RMS energy </li>
<li>zero-crossing rate</li>
</ul>
<h3 id="55-SPECTRAL-LLD"><a href="#55-SPECTRAL-LLD" class="headerlink" title="55 SPECTRAL LLD"></a>55 SPECTRAL LLD</h3><ul>
<li>RASTA-style auditory spectrum, bands 1–26 (0–8 kHz) </li>
<li>MFCC 1–14</li>
<li>Spectral energy 250–650 Hz, 1 k–4 kHz</li>
<li>Spectral roll off point 0.25, 0.50, 0.75, 0.90</li>
<li>Spectral flux, centroid, entropy, slope </li>
<li>Psychoacoustic sharpness, harmonicity </li>
<li>Spectral variance, skewness, kurtosis</li>
</ul>
<h3 id="6-VOICING-RELATED-LLD"><a href="#6-VOICING-RELATED-LLD" class="headerlink" title="6 VOICING RELATED LLD"></a>6 VOICING RELATED LLD</h3><ul>
<li>F 0 (SHS and viterbi smoothing)</li>
<li>Prob. of voice</li>
<li>Log. HNR, Jitter (local, delta), Shimmer (local)</li>
</ul>
<h2 id="Statistical-functionals"><a href="#Statistical-functionals" class="headerlink" title="Statistical functionals"></a>Statistical functionals</h2><p>Statistical functionals include mean, moments, quartiles, 1- and 99-percentiles, as well as contour related measurements such as (relative) rise and fall times, amplitudes and standard deviations of local maxima (‘peaks’), and linear and quadratic regression coefficients.</p>
<h3 id="FUNCTIONALS-APPLIED-TO-LLD-deta-LLD"><a href="#FUNCTIONALS-APPLIED-TO-LLD-deta-LLD" class="headerlink" title="FUNCTIONALS APPLIED TO LLD/deta_LLD"></a>FUNCTIONALS APPLIED TO LLD/deta_LLD</h3><ul>
<li>Quartiles 1–3, 3 inter-quartile ranges</li>
<li>1% Percentile (~=min), 99% percentile (~=max) </li>
<li>Percentile range 1–99%</li>
<li>Position of min/max, range (max   min) </li>
<li>Arithmetic mean, root quadratic mean</li>
<li>Contour centroid, flatness</li>
<li>Standard deviation, skewness, kurtosis</li>
<li>Rel. duration LLD is above 25/50/75/90% range </li>
<li>Rel. duration LLD is rising</li>
<li>Rel. duration LLD has positive curvature</li>
<li>Gain of linear prediction (LP), LP coefficients 1–5 </li>
<li>Mean, max, min, SD of segment length</li>
</ul>
<h3 id="FUNCTIONALS-APPLIED-TO-LLD-ONLY"><a href="#FUNCTIONALS-APPLIED-TO-LLD-ONLY" class="headerlink" title="FUNCTIONALS APPLIED TO LLD ONLY"></a>FUNCTIONALS APPLIED TO LLD ONLY</h3><ul>
<li>Mean value of peaks</li>
<li>Mean value of peaks – arithmetic mean </li>
<li>Mean/SD of inter peak distances</li>
<li>Amplitude mean of peaks, of minima</li>
<li>Amplitude range of peaks</li>
<li>Mean/SD of rising/falling slopes</li>
<li>Linear regression slope, offset, quadratic error </li>
<li>Quadratic regression a, b, offset, quadratic error </li>
<li>Percentage of non-zero frames</li>
</ul>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] Schuller B, Steidl S, Batliner A, et al. The INTERSPEECH 2013 computational paralinguistics challenge: social signals, conflict, emotion, autism[J]. 2013.<br>[2] Weninger F, Eyben F, Schuller B W, et al. On the acoustics of emotion in audio: what speech, music, and sound have in common[J]. 2013.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This blog will introduce a well-evolved feature set for automatic recognition of audio emotion, ie. 2013 ComParE Feature Set[1]. The ComParE feature set contains &lt;code&gt;6373&lt;/code&gt; features. It consists of some &lt;code&gt;generic acoustic emotion descriptors&lt;/code&gt; and their &lt;code&gt;statistical functionals&lt;/code&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="MER" scheme="http://huisblog.cn/tags/MER/"/>
    
      <category term="feature" scheme="http://huisblog.cn/tags/feature/"/>
    
  </entry>
  
  <entry>
    <title>MER 声学特征提取</title>
    <link href="http://huisblog.cn/2017/04/29/featureExt/"/>
    <id>http://huisblog.cn/2017/04/29/featureExt/</id>
    <published>2017-04-29T08:02:17.000Z</published>
    <updated>2017-05-02T06:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="特征集和提取工具"><a href="#特征集和提取工具" class="headerlink" title="特征集和提取工具"></a>特征集和提取工具</h2><p>最近的任务目标是：确定<code>音乐情感特征集（声学特征）</code>和<code>提取方法</code>  </p>
<a id="more"></a>
<p>为了确定要提取的音乐情感声学特征集<code>Acoustics Features Set for Music Emotion</code>，最近看了很多相关文章（<a href="/2017/04/27/MERFeature/" title="Features in MER">Features in MER</a>）。发现对于以前的音乐情感研究工作，研究人员多数使用<a href="http://marsyas.info/" target="_blank" rel="external">Marsyas</a>（最新版本为2015年发布）和<a href="https://cn.mathworks.com/matlabcentral/fileexchange/24583-mirtoolbox" target="_blank" rel="external">MIRtoolbox</a>（MATLAB工具包）。</p>
<p>然而近年来有一个专用于<code>情感计算</code>和<code>音乐信息检索</code>的特征提取工具<code>openSMILE</code>异军突起，这是由TUM（德国慕尼黑工业大学）开发的开源工具，近年来多个Challenge（ISComparE, MediaEval, Emobase等）频繁使用其作为<code>Baseline feature dataset</code>的提取工具，<code>openSMILE</code>针对这几个挑战也在其发布的版本中包含了相应的<code>config</code>文件。（<a href="/2017/04/27/openSMILE/" title="openSMILE安装指南">openSMILE安装指南</a>）</p>
<p>最终，我决定使用<code>the 2013 Computational Paralinguistics Evaluation (ComParE)</code>[1] 提出的基线数据集<a href="/2017/05/02/IS13feature/" title="2013 ComParE Feature Set">2013 ComParE Feature Set</a>（它同样在<code>MediaEval 2014</code>中被作为基线数据集[2]）。它在[3] 中表现出了评估speech, music, 以及 acoustic events的多维度情感鲁棒性。</p>
<p>同时，我决定使用<code>openSMILE</code>作为特征提取工具。</p>
<h2 id="提取流程"><a href="#提取流程" class="headerlink" title="提取流程"></a>提取流程</h2><p>拟下载的音乐文件为<code>MP3</code>格式，而<code>openSMILE</code>只支持<code>WAV</code>，所以首先需要用<code>ffmpeg</code>转换格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sh transformat.sh</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment">#transformat.sh</span></div><div class="line"><span class="comment">#transform MP3 to WAV</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"Please Enter the MusicPath -&gt; "</span></div><div class="line"><span class="built_in">read</span> mpath</div><div class="line"><span class="built_in">cd</span> <span class="variable">$&#123;mpath&#125;</span></div><div class="line">mkdir <span class="string">'wav'</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> m <span class="keyword">in</span> *.mp3</div><div class="line"><span class="keyword">do</span></div><div class="line">ffmpeg -i <span class="variable">$m</span> <span class="string">"wav/<span class="variable">$&#123;m%.mp3&#125;</span>.wav"</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>然后使用<code>openSMILE</code>批量提取音乐特征：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sh smileEX.sh</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment">#smileEX.sh</span></div><div class="line"><span class="comment">#Extract features in batch by using openSMILE</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"Please Enter the openSMILE Path -&gt; "</span></div><div class="line"><span class="built_in">read</span> opensmile</div><div class="line"><span class="built_in">echo</span> <span class="string">"Please Enter the Music Path -&gt; "</span></div><div class="line"><span class="built_in">read</span> mpath</div><div class="line"><span class="built_in">cd</span> <span class="variable">$&#123;mpath&#125;</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> m <span class="keyword">in</span> *.wav</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="variable">$&#123;opensmile&#125;</span>/SMILExtract -C <span class="variable">$&#123;opensmile&#125;</span>/config/IS13_ComParE.conf  -I <span class="variable">$m</span>  -O  IS13features.arff  -instname <span class="string">"<span class="variable">$&#123;m%.wav&#125;</span>"</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>从QQ音乐和网易云音乐下载的测试音乐特征提取成功。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] Schuller B, Steidl S, Batliner A, et al. The INTERSPEECH 2013 computational paralinguistics challenge: social signals, conflict, emotion, autism[J]. 2013.<br>[2] Aljanaki A, Yang Y H, Soleymani M. Developing a benchmark for emotional analysis of music[J]. PloS one, 2017, 12(3): e0173392.<br>[3] Weninger F, Eyben F, Schuller B W, et al. On the acoustics of emotion in audio: what speech, music, and sound have in common[J]. 2013.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;特征集和提取工具&quot;&gt;&lt;a href=&quot;#特征集和提取工具&quot; class=&quot;headerlink&quot; title=&quot;特征集和提取工具&quot;&gt;&lt;/a&gt;特征集和提取工具&lt;/h2&gt;&lt;p&gt;最近的任务目标是：确定&lt;code&gt;音乐情感特征集（声学特征）&lt;/code&gt;和&lt;code&gt;提取方法&lt;/code&gt;  &lt;/p&gt;
    
    </summary>
    
    
      <category term="MER" scheme="http://huisblog.cn/tags/MER/"/>
    
      <category term="feature" scheme="http://huisblog.cn/tags/feature/"/>
    
      <category term="tool" scheme="http://huisblog.cn/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>多组SSH-Key公钥/私钥的配置</title>
    <link href="http://huisblog.cn/2017/04/29/Multissh/"/>
    <id>http://huisblog.cn/2017/04/29/Multissh/</id>
    <published>2017-04-29T02:47:56.000Z</published>
    <updated>2017-05-02T06:11:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于在同时使用<code>Github</code>和<code>Git@OSchina</code>（Github私有库需要收费且Git@OSchina在国内的访问速度较快），所以需要设置两组SSH-Key。</p>
<a id="more"></a>
<h2 id="本地生成公私钥"><a href="#本地生成公私钥" class="headerlink" title="本地生成公私钥"></a>本地生成公私钥</h2><p>Step1. 本地生成ssh keys命令：<code>ssh-keygen -t rsa -C &quot;注册邮箱&quot;</code>，生成的公私秘钥会提示是否需要重命名，键入自定义名称（防止再次生成的秘钥覆盖之前的），可跳过密码设置。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 生成github ssh keys</span></div><div class="line">$ ssh-keygen -t rsa -C <span class="string">"githubEmail"</span></div><div class="line">Generating public/private rsa key <span class="keyword">in</span> pair...</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (<span class="string">"默认位置"</span>): ~/.ssh/github_rsa </div><div class="line">Enter passphrase ...</div><div class="line">...</div><div class="line"></div><div class="line"><span class="comment"># 生成git@oschina ssh keys</span></div><div class="line">$ ssh-keygen -t rsa -C <span class="string">"git@oschinaEmail"</span></div><div class="line">Generating public/private rsa key <span class="keyword">in</span> pair...</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (<span class="string">"默认位置"</span>): ~/.ssh/oschina_rsa </div><div class="line">Enter passphrase ...</div><div class="line">...</div></pre></td></tr></table></figure>
<p>Step2. 配置<code>config</code>将两组秘钥对应到相应的远程仓库。在.ssh/目录下新建<code>config</code>文件，其中<code>Host</code>是一个别名，命名可以随意，用来进行远程连接，当然使用真实的主机名称也是可以的。<code>HostName</code>和<code>IdentityFile</code>是各自主机名称以及对应的秘钥文件。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#github configuration</span></div><div class="line">Host github.com</div><div class="line">	HostName github.com</div><div class="line">	IdentityFile ~/.ssh/github_rsa</div><div class="line">	User githubEmail</div><div class="line"></div><div class="line"><span class="comment">#gitoschina configuration</span></div><div class="line">Host git.oschina.net</div><div class="line">	HostName git.oschina.net</div><div class="line">	IdentityFile ~/.ssh/oschina_rsa</div><div class="line">	User git@oschinaEmail</div></pre></td></tr></table></figure>
<h2 id="将公钥添加到账户"><a href="#将公钥添加到账户" class="headerlink" title="将公钥添加到账户"></a>将公钥添加到账户</h2><p>分别将生成的公钥添加到相应的Git账户</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>测试Git连接，提示是否建立连接：yes。成功后会提示<code>Welcome...</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div><div class="line">$ ssh -T git@git.oschina.net</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于在同时使用&lt;code&gt;Github&lt;/code&gt;和&lt;code&gt;Git@OSchina&lt;/code&gt;（Github私有库需要收费且Git@OSchina在国内的访问速度较快），所以需要设置两组SSH-Key。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ssh" scheme="http://huisblog.cn/tags/ssh/"/>
    
      <category term="github" scheme="http://huisblog.cn/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Probably Graphic Model</title>
    <link href="http://huisblog.cn/2017/04/27/ApplicationMath/pgm/"/>
    <id>http://huisblog.cn/2017/04/27/ApplicationMath/pgm/</id>
    <published>2017-04-27T06:40:06.000Z</published>
    <updated>2017-04-27T06:53:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>简而言之，数形结合的思想。</p>
<h2 id="贝叶斯网络"><a href="#贝叶斯网络" class="headerlink" title="贝叶斯网络"></a>贝叶斯网络</h2><p>即有向图模型<br><img src="/2017/04/27/ApplicationMath/pgm/bayes.png" alt="bayes.png" title=""></p>
<h2 id="马尔可夫随机场"><a href="#马尔可夫随机场" class="headerlink" title="马尔可夫随机场"></a>马尔可夫随机场</h2><p>即无向图模型<br><img src="/2017/04/27/ApplicationMath/pgm/makov.png" alt="makov.png" title=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简而言之，数形结合的思想。&lt;/p&gt;
&lt;h2 id=&quot;贝叶斯网络&quot;&gt;&lt;a href=&quot;#贝叶斯网络&quot; class=&quot;headerlink&quot; title=&quot;贝叶斯网络&quot;&gt;&lt;/a&gt;贝叶斯网络&lt;/h2&gt;&lt;p&gt;即有向图模型&lt;br&gt;&lt;img src=&quot;/2017/04/27/Appli
    
    </summary>
    
      <category term="应用工程数学" scheme="http://huisblog.cn/categories/%E5%BA%94%E7%94%A8%E5%B7%A5%E7%A8%8B%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="Math" scheme="http://huisblog.cn/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Markov Chains &amp; HMM</title>
    <link href="http://huisblog.cn/2017/04/27/ApplicationMath/mc/"/>
    <id>http://huisblog.cn/2017/04/27/ApplicationMath/mc/</id>
    <published>2017-04-27T06:40:05.000Z</published>
    <updated>2017-04-27T06:48:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>会其意，知其形。</p>
<h2 id="Markov-Chain"><a href="#Markov-Chain" class="headerlink" title="Markov Chain"></a>Markov Chain</h2><p>服从马尔可夫性（无记忆性）：当前状态只与前一个状态有关，与更往前的状态无关。</p>
<h2 id="HMM-Hiden-Markov-Model"><a href="#HMM-Hiden-Markov-Model" class="headerlink" title="HMM(Hiden Markov Model)"></a>HMM(Hiden Markov Model)</h2><p>一个概率模型，用于描述系统隐性状态的转移和隐性状态的表现（输出）概率。</p>
<ul>
<li>可见状态链</li>
<li>隐含状态链    <img src="/2017/04/27/ApplicationMath/mc/chains.jpg" alt="chains.jpg" title=""></li>
<li>隐含状态数量  </li>
<li>隐含状态之间的转换概率(transition probability)    <img src="/2017/04/27/ApplicationMath/mc/transition.jpg" alt="transition.jpg" title=""></li>
<li>隐含状态到可见状态的输出概率(emission probability)    <img src="/2017/04/27/ApplicationMath/mc/emission.jpg" alt="emission.jpg" title="">  
</li>
</ul>
<h3 id="HMM能做什么，怎么做？"><a href="#HMM能做什么，怎么做？" class="headerlink" title="HMM能做什么，怎么做？"></a>HMM能做什么，怎么做？</h3><ol>
<li>估计(evaluation)<br> 转换概率+输出概率 -&gt; 可见状态出现的概率 （动态规划、forward algorithm）</li>
<li>解码(decoding)<br> 转换概率+输出概率+可见状态链 -&gt; 隐含状态链 （极大似然、Viterbi algorithm）      </li>
<li>学习(learning)<br> a. 有可见状态链和隐含状态链-&gt;HMM模型<br> b. 只有可见状态链-&gt;HMM模型</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;会其意，知其形。&lt;/p&gt;
&lt;h2 id=&quot;Markov-Chain&quot;&gt;&lt;a href=&quot;#Markov-Chain&quot; class=&quot;headerlink&quot; title=&quot;Markov Chain&quot;&gt;&lt;/a&gt;Markov Chain&lt;/h2&gt;&lt;p&gt;服从马尔可夫性（无记忆性）：
    
    </summary>
    
      <category term="应用工程数学" scheme="http://huisblog.cn/categories/%E5%BA%94%E7%94%A8%E5%B7%A5%E7%A8%8B%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="Math" scheme="http://huisblog.cn/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>PCA主成分分析</title>
    <link href="http://huisblog.cn/2017/04/27/ApplicationMath/pca/"/>
    <id>http://huisblog.cn/2017/04/27/ApplicationMath/pca/</id>
    <published>2017-04-27T06:40:03.000Z</published>
    <updated>2017-04-27T06:46:36.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>零均值化：每个属性值减去其均值</li>
<li>求协方差矩阵</li>
<li>求协方差矩阵的特征值和特征向量</li>
<li>保留主成分</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;零均值化：每个属性值减去其均值&lt;/li&gt;
&lt;li&gt;求协方差矩阵&lt;/li&gt;
&lt;li&gt;求协方差矩阵的特征值和特征向量&lt;/li&gt;
&lt;li&gt;保留主成分&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
      <category term="应用工程数学" scheme="http://huisblog.cn/categories/%E5%BA%94%E7%94%A8%E5%B7%A5%E7%A8%8B%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="Math" scheme="http://huisblog.cn/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Point Esimation 点估计</title>
    <link href="http://huisblog.cn/2017/04/27/ApplicationMath/pe/"/>
    <id>http://huisblog.cn/2017/04/27/ApplicationMath/pe/</id>
    <published>2017-04-27T06:40:02.000Z</published>
    <updated>2017-04-30T02:04:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hoeffding不等式"><a href="#Hoeffding不等式" class="headerlink" title="Hoeffding不等式"></a>Hoeffding不等式</h2><p>用于确认精确度，适用于所有有界的随机变量。假设有两两独立的变量X1…Xn，其中Xi都是<code>几乎</code>有界的变量，即满足  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">P(ai&lt;=Xi&lt;=bi) = 1</div></pre></td></tr></table></figure>
<p>则其期望满足：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">P(|mean(X)-E(mean(X))|&gt;=t) &lt;= 2exp(-2(nt)^2/sum((bi - ai)^2))</div></pre></td></tr></table></figure>
<h2 id="Regression回归分析"><a href="#Regression回归分析" class="headerlink" title="Regression回归分析"></a>Regression回归分析</h2><p>Bias-Variance Tradeoff</p>
<ul>
<li>欠拟合 underfitting 高偏差 bias</li>
<li>过拟合 overfitting 高方差 variance</li>
</ul>
<p>解决方法：1、减少选取的特征数量；2、正则化 regularization</p>
<h2 id="Polynomial-Curve-Fitting"><a href="#Polynomial-Curve-Fitting" class="headerlink" title="Polynomial Curve Fitting"></a>Polynomial Curve Fitting</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Y = XA </div><div class="line">#使用法向量计算最小二乘法结果</div><div class="line">A = (X.T * X) * X.T * Y</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hoeffding不等式&quot;&gt;&lt;a href=&quot;#Hoeffding不等式&quot; class=&quot;headerlink&quot; title=&quot;Hoeffding不等式&quot;&gt;&lt;/a&gt;Hoeffding不等式&lt;/h2&gt;&lt;p&gt;用于确认精确度，适用于所有有界的随机变量。假设有两两独立的变
    
    </summary>
    
      <category term="应用工程数学" scheme="http://huisblog.cn/categories/%E5%BA%94%E7%94%A8%E5%B7%A5%E7%A8%8B%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="Math" scheme="http://huisblog.cn/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>聚类</title>
    <link href="http://huisblog.cn/2017/04/27/ApplicationMath/cluster/"/>
    <id>http://huisblog.cn/2017/04/27/ApplicationMath/cluster/</id>
    <published>2017-04-27T06:40:01.000Z</published>
    <updated>2017-04-27T06:51:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相似性衡量"><a href="#相似性衡量" class="headerlink" title="相似性衡量"></a>相似性衡量</h2><ul>
<li>距离</li>
<li>相似性</li>
<li>核函数</li>
<li>DTW（dynamic time warping 一种特殊的距离算法）</li>
</ul>
<h2 id="聚类算法"><a href="#聚类算法" class="headerlink" title="聚类算法"></a>聚类算法</h2><ul>
<li><p>划分聚类(Partition-based methods)<br>确认聚类数量，挑选初始点 -&gt; 类内的点足够近，类间的点足够远。</p>
</li>
<li><p>密度聚类(Density-based methods)<br>指定圈的最大半径，包含的最少点数量 -&gt; 画圈。</p>
</li>
<li><p>模型聚类(Model-based methods)<br>基于概率模型和神经网络模型 -&gt; 同一类属于同一概率分布</p>
</li>
<li><p>层次聚类(Hierarchical methods)<br>自下而上法 (bottom-up) 和自上而下法 (top-down)，根据linkage迭代联合或者排异。</p>
</li>
<li><p>网格聚类(Grid-based methods)<br>将数据空间划分为网格单元，将数据对象集映射到网格单元中。计算每个单元的密度，根据阈值确定高密度单元 -&gt; 相近的高密度单元组成类</p>
</li>
</ul>
<a id="more"></a>
<h3 id="常用聚类算法"><a href="#常用聚类算法" class="headerlink" title="常用聚类算法"></a>常用聚类算法</h3><p><a href="http://scikit-learn.org/stable/modules/clustering.html#clustering" target="_blank" rel="external">Overview of clustering methods</a>  </p>
<ul>
<li><p>k-means</p>
<img src="/2017/04/27/ApplicationMath/cluster/kmeans01.png" alt="kmeans01.png" title="">
<img src="/2017/04/27/ApplicationMath/cluster/kmeans02.png" alt="kmeans02.png" title="">
</li>
<li><p>GMM</p>
<img src="/2017/04/27/ApplicationMath/cluster/gmm01.png" alt="gmm01.png" title="">
<img src="/2017/04/27/ApplicationMath/cluster/gmm02.png" alt="gmm02.png" title="">
</li>
</ul>
<h2 id="数据简化"><a href="#数据简化" class="headerlink" title="数据简化"></a>数据简化</h2><ul>
<li>变化</li>
<li>降维</li>
<li>抽样</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;相似性衡量&quot;&gt;&lt;a href=&quot;#相似性衡量&quot; class=&quot;headerlink&quot; title=&quot;相似性衡量&quot;&gt;&lt;/a&gt;相似性衡量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;距离&lt;/li&gt;
&lt;li&gt;相似性&lt;/li&gt;
&lt;li&gt;核函数&lt;/li&gt;
&lt;li&gt;DTW（dynamic time warping 一种特殊的距离算法）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;聚类算法&quot;&gt;&lt;a href=&quot;#聚类算法&quot; class=&quot;headerlink&quot; title=&quot;聚类算法&quot;&gt;&lt;/a&gt;聚类算法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;划分聚类(Partition-based methods)&lt;br&gt;确认聚类数量，挑选初始点 -&amp;gt; 类内的点足够近，类间的点足够远。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;密度聚类(Density-based methods)&lt;br&gt;指定圈的最大半径，包含的最少点数量 -&amp;gt; 画圈。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模型聚类(Model-based methods)&lt;br&gt;基于概率模型和神经网络模型 -&amp;gt; 同一类属于同一概率分布&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;层次聚类(Hierarchical methods)&lt;br&gt;自下而上法 (bottom-up) 和自上而下法 (top-down)，根据linkage迭代联合或者排异。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网格聚类(Grid-based methods)&lt;br&gt;将数据空间划分为网格单元，将数据对象集映射到网格单元中。计算每个单元的密度，根据阈值确定高密度单元 -&amp;gt; 相近的高密度单元组成类&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="应用工程数学" scheme="http://huisblog.cn/categories/%E5%BA%94%E7%94%A8%E5%B7%A5%E7%A8%8B%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="Math" scheme="http://huisblog.cn/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>音乐情感识别简介</title>
    <link href="http://huisblog.cn/2017/04/27/MERintro/"/>
    <id>http://huisblog.cn/2017/04/27/MERintro/</id>
    <published>2017-04-27T06:30:54.000Z</published>
    <updated>2017-04-27T06:54:32.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>音乐情感识别的重要性：<br>1、用于音乐检索；2、方便用户组织结构；3、增强人机交互。</p>
</li>
<li><p>音乐情感识别的基础框架：  </p>
<img src="/2017/04/27/MERintro/merc1-1.png" alt="音乐情感识别概略图" title="音乐情感识别概略图">
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>音乐情感识别的四个问题：  </p>
<ol>
<li>情感描述的歧义和粒度（不同情感术语之间的模糊边界，少的情感类别不足以描述丰富的情感而多的会增加难度降低准确率）；  </li>
<li>情感注释的认知负载；  </li>
<li>情绪感知的主观性；  </li>
<li>低层特征和高层感知之间的语义鸿沟。  <img src="/2017/04/27/MERintro/merc1-2.png" alt="四个问题" title="四个问题">
</li>
</ol>
</li>
<li><p>《Music Emotion Recognizition》概览  </p>
<img src="/2017/04/27/MERintro/merc1-3.png" alt="本书概览" title="本书概览">
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;音乐情感识别的重要性：&lt;br&gt;1、用于音乐检索；2、方便用户组织结构；3、增强人机交互。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;音乐情感识别的基础框架：  &lt;/p&gt;
&lt;img src=&quot;/2017/04/27/MERintro/merc1-1.png&quot; alt=&quot;音乐情感识别概略图&quot; title=&quot;音乐情感识别概略图&quot;&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="MER" scheme="http://huisblog.cn/tags/MER/"/>
    
  </entry>
  
  <entry>
    <title>openSMILE</title>
    <link href="http://huisblog.cn/2017/04/27/openSMILE/"/>
    <id>http://huisblog.cn/2017/04/27/openSMILE/</id>
    <published>2017-04-27T06:28:08.000Z</published>
    <updated>2017-04-27T06:29:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>S1. 下载最新的稳定版本<a href="http://audeering.com/technology/opensmile/#download" target="_blank" rel="external">openSMILE</a></p>
<p>S2. 下载依赖工具库  </p>
<ul>
<li>autotools(automake, autoconf, libtool, and m4)  </li>
<li>make</li>
<li>GNU C and C++ compiler gcc and g++</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ brew install automake</div><div class="line">$ brew install autoconf</div><div class="line">$ brew install libtool</div><div class="line">$ brew install m4</div><div class="line">$ brew install gcc</div></pre></td></tr></table></figure>
<p>S3. 解压并安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ tar-zxvf opensmile-X.X.X.tar.gz</div><div class="line">$ cd opensmile-X.X.X</div><div class="line">$ sh buildStandalone.sh</div></pre></td></tr></table></figure>
<p>S4. 测试安装是否成功  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ SMILExtract -h</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;S1. 下载最新的稳定版本&lt;a href=&quot;http://audeering.com/technology/opensmile/#download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;openSMILE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;S2. 下载依赖工具
    
    </summary>
    
    
      <category term="MER" scheme="http://huisblog.cn/tags/MER/"/>
    
      <category term="feature" scheme="http://huisblog.cn/tags/feature/"/>
    
      <category term="tool" scheme="http://huisblog.cn/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>Features in MER</title>
    <link href="http://huisblog.cn/2017/04/27/MERFeature/"/>
    <id>http://huisblog.cn/2017/04/27/MERFeature/</id>
    <published>2017-04-27T06:18:24.000Z</published>
    <updated>2017-04-27T06:27:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Analysis-Content"><a href="#Analysis-Content" class="headerlink" title="Analysis Content"></a>Analysis Content</h2><ul>
<li>Text-Content   (Web-Documents, Social-Tags, Lyrics)  </li>
<li>Audio-Content  （Acoustic Features）</li>
</ul>
<a id="more"></a>
<h2 id="Audio-Content"><a href="#Audio-Content" class="headerlink" title="Audio-Content"></a>Audio-Content</h2><p>P1. Measurement and time series analysis of emotion in music(Schubert1999 <em>Cited: 118’</em>)<br>A very old book introducing measurement and time series analysis of emotion in music.</p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>Loudnedss related</td>
<td>Dynamics</td>
</tr>
<tr>
<td>Pitch related</td>
<td>Mean pitch, Pitch range, Variation in pitch, Melodic contour, Register, Mode, Timbre, Harmony</td>
</tr>
<tr>
<td>Duration related</td>
<td>Tempo, Articulation, Note onset, Vibrato, Rhythm, Metre</td>
</tr>
</tbody>
</table>
<p>P2. Automatic mood detection from acoustic music data(ISMIR2003 <em>Cited: 233’</em>)<br>“It was indicated that mode, intensity, timbre and rhythm are of great significance in arousing different music moods. However, mode is very difficult to obtain from acoustic data (Hinn, 1996). Therefore, only the rest three features are extracted and used in our mood detection system.”</p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>Intensity</td>
<td>Root mean-square (RMS) level in decibels</td>
</tr>
<tr>
<td>Rhythm</td>
<td>Average strength, Average correlation peak, Average tempo</td>
</tr>
<tr>
<td>Timbre</td>
<td>Spectral Shape Features: Centroid, Bandwidth, Roll off, Spectral Flux; Spectral Contrast Features: Sub-band Peak, Sub-band Valley, Sub-band Average</td>
</tr>
</tbody>
</table>
<p>P3. Disambiguating Music Emotion Using Software Agents(ISMIR2004 <em>Cited: 118’</em>)<br>This paper confirmed the results of P2 which found that emotional intensity was highly correlated with rhythm and timbre features.</p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>Tempo</td>
<td>Beats per Minute (BPM)</td>
</tr>
<tr>
<td>LLD</td>
<td>Low-level standard descriptors from the MPEG-7 audio standard (12 attributes)</td>
</tr>
<tr>
<td>Timbre</td>
<td>Spectral centroid, Spectral rolloff, Spectral flux, Spectral kurtosis</td>
</tr>
<tr>
<td>Intensity</td>
<td>Labels of intensity from 0 to 9 were applied to instances by a human listener</td>
</tr>
<tr>
<td>Another 12 attributes</td>
<td>Generated by a genetic algorithm using the Sony Extractor Discovery System (EDS)</td>
</tr>
</tbody>
</table>
<p>Tools recommended：Wavelet tools, MPEG-7 Low Level Descriptors, Sony Extractor Discovery System (EDS)  </p>
<p>P4. Modeling emotional content of music using system identification(TSMC2005 <em>Cited: 104’</em>)</p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>Dynamiscs</td>
<td>Loudness level, Short term max.loudness</td>
</tr>
<tr>
<td>Mean Pitch</td>
<td>Power spectrum centroid, Mean STFT centroid</td>
</tr>
<tr>
<td>Pitch Variation</td>
<td>Mean STFT Flux, Std dev. STFT flux, Std dev. STFT centroid</td>
</tr>
<tr>
<td>Timbre</td>
<td>Timbral Width, Mean STFT rolloff, Std. dev. STFT rolloff, Sharpness(Zwicker and Fastl)</td>
</tr>
<tr>
<td>Harmony</td>
<td>Spectral dissonance(Hutchinson and Knopoff), Spectral dissonance(Sethares), Tonal dissonance(Hutchinson and Knopoff), Tonal dissonance(Sethares), Complex tonalness</td>
</tr>
<tr>
<td>Tempo</td>
<td>Beats Per Minute</td>
</tr>
<tr>
<td>Texture</td>
<td>Multiplicity</td>
</tr>
</tbody>
</table>
<p>Tools recommended：PsySound, Marsyas</p>
<p>P5. Music Emotion Classification: A Fuzzy Approach(ACM MM2006 <em>Cited: 142’</em>)<br>This paper used PsySound2 to extract music features and choose 15 features as recommended in P1. “begins with all 15 features and then greedily removes the worst feature sequentially until no more accuracy improvement can be obtained.” Same as <a href="./papers/popmusic.22.pdf">Detecting and Classifying Emotion in Popular Music</a>(JCIS2006 <em>Cited: 22’</em>)</p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>Loudnedss related</td>
<td>Dynamics</td>
</tr>
<tr>
<td>Pitch related</td>
<td>Mean pitch, Pitch range, Variation in pitch, Melodic contour, Register, Mode, Timbre, Harmony</td>
</tr>
<tr>
<td>Duration related</td>
<td>Tempo, Articulation, Note onset, Vibrato, Rhythm, Metre</td>
</tr>
</tbody>
</table>
<p>Tools recommended：PsySound2</p>
<p>P6. Multi-Label Classification of Music into Emotions(ISMIR2008 <em>Cited: 529’</em>)  </p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>Rhythm</td>
<td>The two highest peaks and computing their amplitudes, their BMPs (beats per minute) and the high-to-low ratio of their BPMs; Summing the histogram bins between 40-90, 90-140 and 140- 250 BPMs respectively. -&gt; 8</td>
</tr>
<tr>
<td>Timbre</td>
<td>the first 13 MFCCs, spectral centroid, spectral rolloff and spectral flux for per frame -&gt; 16 -&gt; The mean, std, mean std and std std over all frames -&gt; 64</td>
</tr>
</tbody>
</table>
<p>Tools recommended：Marsyas tool</p>
<p>P7. A regression approach to music emotion recognition(TASLP2008 <em>Cited: 319’</em>)<br>“extract musical features and construct a 114-dimension feature space”</p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>PsySound</td>
<td>Loudness, Level, Dissonance, Pitch -&gt; 44</td>
</tr>
<tr>
<td>Marsyas</td>
<td>Spectral centroid, Spectral rolloff, Spectral flux, Time domain zero-crossing and Mel-frequency cep- stral coefficient (MFCC) -&gt; 19, 6 rhythmic content features (by beat and tempo detection), 5 pitch content features (by multi- pitch detection) -&gt; 30</td>
</tr>
<tr>
<td>Spectral contrast</td>
<td>Capture the relative spectral information in each subband and utilize the spectral peak, spectral valley, and their dynamics as features -&gt; 12</td>
</tr>
<tr>
<td>DWCH</td>
<td>histograms of Daubechies wavelet co- efficients at different frequency subbands with different resolutions -&gt; 28</td>
</tr>
</tbody>
</table>
<p>Tools recommended：PsySound, Marsyas, Matlab</p>
<p>P8. Music emotion recognition: A state of the art review(ISMIR2010 <em>Cited: 268’</em>)<br>“An overview of the most common acoustic features used for mood recognition”  </p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>Dynamics</td>
<td>RMS-Energy</td>
</tr>
<tr>
<td>Timbre</td>
<td>MFCCs, Spectral-Shape, Spectral-Contrast</td>
</tr>
<tr>
<td>Harmony</td>
<td>Roughness, Harmonic-Change, Key-Clarity, Majorness</td>
</tr>
<tr>
<td>Register</td>
<td>Chromagram, Chroma-Centroid and Deviation</td>
</tr>
<tr>
<td>Rhythm</td>
<td>Rhythm-Strength, Regularity, Tempo, Beat-Histograms</td>
</tr>
<tr>
<td>Articulation</td>
<td>Event-Density, Attack-Slope, Attack-Time</td>
</tr>
</tbody>
</table>
<p>Tools recommended：MIRtoolbox  </p>
<p>P9. Machine recognition of music emotion: A review(TIST2012 <em>Cited: 139’</em>)<br>“briefly review some features that have been utilized in MER”</p>
<table>
<thead>
<tr>
<th>Types</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td>Energy</td>
<td>Audio power, Total loudness, Specific loudness sensation coefficients(SONE)</td>
</tr>
<tr>
<td>Rhythm</td>
<td>Rhythm Strength, Rhythm Regularity, Rhythm Clarity, Average onset frequency, Average tempo</td>
</tr>
<tr>
<td>Melody</td>
<td>Salient Pitch, Chromagram center, Key clarity, Mode, Harmonic change</td>
</tr>
<tr>
<td>Timbre</td>
<td>MFCC</td>
</tr>
</tbody>
</table>
<p>Tools recommended：MA Toolbox, MIRtoolbox, Marsyas tool</p>
<p>P10. Developing a benchmark for emotional analysis of music(PloSone2017)<br>This is a interesting competive workshop.<br>“Performance of the different feature-sets on valence, development and evaluation-sets of 2015, 20 fold cross-validation”<br><img src="/2017/04/27/MERFeature/journal.pone.0173392.t007.PNG" alt="journal.pone.0173392.t007.PNG" title=""><br>“Performance of the different feature-sets on arousal, development and evaluation-sets of 2015, 20 fold cross-validation”<br><img src="/2017/04/27/MERFeature/journal.pone.0173392.t008.PNG" alt="journal.pone.0173392.t008.PNG" title=""></p>
<p>Tools recommended：OpenSMILE</p>
<h2 id="Findings"><a href="#Findings" class="headerlink" title="Findings"></a>Findings</h2><ol>
<li><p>Every lab has its own emo-features-set in music. Most common used features:<br>MFCCs, Loudness, Spectral features (centroid, flux, rolloff, flatness), Timbre, Rhythm, Pitch, Harmony, Zero crossing rate</p>
</li>
<li><p>Acoustic feature extraction has better use a number of tools to give a broad mix from which to select the best features:<br>Marsyas, MIRtoolbox, PsySound, OpenSMILE</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Analysis-Content&quot;&gt;&lt;a href=&quot;#Analysis-Content&quot; class=&quot;headerlink&quot; title=&quot;Analysis Content&quot;&gt;&lt;/a&gt;Analysis Content&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Text-Content   (Web-Documents, Social-Tags, Lyrics)  &lt;/li&gt;
&lt;li&gt;Audio-Content  （Acoustic Features）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="MER" scheme="http://huisblog.cn/tags/MER/"/>
    
      <category term="feature" scheme="http://huisblog.cn/tags/feature/"/>
    
  </entry>
  
  <entry>
    <title>音乐情感计算相关期刊收集整理</title>
    <link href="http://huisblog.cn/2017/04/27/journals/"/>
    <id>http://huisblog.cn/2017/04/27/journals/</id>
    <published>2017-04-27T06:13:41.000Z</published>
    <updated>2017-04-29T09:11:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SCI"><a href="#SCI" class="headerlink" title="SCI"></a>SCI</h2><ul>
<li>TIST<br><a href="http://tist.acm.org/index.cfm" target="_blank" rel="external">ACM Transactions on Intelligent Systems and Technology</a></li>
<li>TAC<br><a href="http://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=5165369" target="_blank" rel="external">IEEE Transactions on Affective Computing</a></li>
</ul>
<a id="more"></a>
<h2 id="EI"><a href="#EI" class="headerlink" title="EI"></a>EI</h2><ul>
<li>TASLP<br><a href="http://signalprocessingsociety.org/publications-resources/ieeeacm-transactions-audio-speech-and-language-processing/ieeeacm" target="_blank" rel="external">IEEE/ACM Transactions on Audio, Speech, and Language Processing</a>  </li>
<li>JAIST<br><a href="https://www.asist.org/publications/jasist/" target="_blank" rel="external">Journal of the Association for Information Science and Technology</a></li>
</ul>
<h2 id="相关会议"><a href="#相关会议" class="headerlink" title="相关会议"></a>相关会议</h2><ul>
<li>ICMC<br>[International Computer Music Conference]  </li>
<li>ICASSP<br>[IEEE International Conference on Acoustics, Speech<br>and Signal Processing]</li>
<li>MM<br>[ACM Multimedia]</li>
<li>ISMIR<br>[International Society for Music Information<br>Retrieval Conference]</li>
</ul>
<h2 id="相关比赛"><a href="#相关比赛" class="headerlink" title="相关比赛"></a>相关比赛</h2><ul>
<li><a href="http://compare.openaudio.eu/" target="_blank" rel="external">Interspeech Computational Paralinguistics ChallengE (ComParE)</a></li>
<li><a href="http://www.multimediaeval.org/" target="_blank" rel="external">MediaEval</a> </li>
<li><a href="http://sspnet.eu/" target="_blank" rel="external">AVEC ACM MM</a></li>
</ul>
<h2 id="期刊类型"><a href="#期刊类型" class="headerlink" title="期刊类型"></a>期刊类型</h2><p>判断期刊是否是SCI/EI:<br>EI: <a href="https://www.engineeringvillage.com/search/quick.url" target="_blank" rel="external">Engineering Vallige</a> Database选择Compendex（IE网络版）<br>SCI: <a href="http://ip-science.thomsonreuters.com/mjl/" target="_blank" rel="external">期刊列表</a>，<a href="http://apps.webofknowledge.com/UA_GeneralSearch_input.do?product=UA&amp;search_mode=GeneralSearch&amp;SID=3CXjlEnOuKswueSjVDT&amp;preferencesSaved=" target="_blank" rel="external">查询文章</a>选择World of Science</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SCI&quot;&gt;&lt;a href=&quot;#SCI&quot; class=&quot;headerlink&quot; title=&quot;SCI&quot;&gt;&lt;/a&gt;SCI&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;TIST&lt;br&gt;&lt;a href=&quot;http://tist.acm.org/index.cfm&quot;&gt;ACM Transactions on Intelligent Systems and Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TAC&lt;br&gt;&lt;a href=&quot;http://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=5165369&quot;&gt;IEEE Transactions on Affective Computing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="MER" scheme="http://huisblog.cn/tags/MER/"/>
    
  </entry>
  
  <entry>
    <title>Github Pages + Hexo</title>
    <link href="http://huisblog.cn/2017/04/26/NewBlog/"/>
    <id>http://huisblog.cn/2017/04/26/NewBlog/</id>
    <published>2017-04-26T15:50:31.000Z</published>
    <updated>2017-05-07T09:00:15.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客站点迁移"><a href="#博客站点迁移" class="headerlink" title="博客站点迁移"></a>博客站点迁移</h1><p>阿里云服务器快要到期不想再续，遂决定将博客迁移到免费的<code>GitHub Pages</code>上。</p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><code>Github Pages</code>+<code>Hexo</code>(不使用<code>Jekyll</code>是因为没有找到好看的主题)  </p>
<ol>
<li>在GitHub上创建<code>GitHub Pages</code></li>
<li>配置本地<code>Hexo</code>环境，并与<code>GitHub Pages</code>绑定</li>
<li>绑定域名</li>
</ol>
<a id="more"></a>
<h2 id="创建Github-Pages"><a href="#创建Github-Pages" class="headerlink" title="创建Github Pages"></a>创建Github Pages</h2><p>直接在<code>GitHub</code>网站上创建一个仓库，仓库名必须为<code>myusername.github.io</code>。<br><img src="/2017/04/26/NewBlog/1493223050689.png" alt="1493223050689.png" title=""></p>
<h2 id="安装并配置Hexo"><a href="#安装并配置Hexo" class="headerlink" title="安装并配置Hexo"></a>安装并配置Hexo</h2><p>Step1. 根据<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo中文文档</a>中的提示进行安装：  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#先安装依赖库Node.js（假定已经安装好了Git）</div><div class="line">$ brew install Node.js</div><div class="line">#下载安装Hexo</div><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>
<p>Step2. 开始在本地建站</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo init &lt;Blogfolder&gt;</div><div class="line">$ cd &lt;Blogfolder&gt;</div><div class="line">$ npm install</div></pre></td></tr></table></figure>
<p>Step3. 在博客文件根目录下打开终端，启动本地服务器查看建站是否成功。成功后可以在<code>localhost:4000</code>浏览博客Hello World。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure>
<img src="/2017/04/26/NewBlog/1493223087552.png" alt="1493223087552.png" title="">
<p>Step4. 根据<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Hexo配置文档</a>部署网站到<code>github pages</code><br>a. 修改站点配置文件<code>_config.yml</code>(Blogfolder/_config.yml)中的Deployment模块，把其中repo字段的值替换成自己github pages提交代码的git地址。(如果使用ssh，将<code>repo</code>改为相应ssh地址)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/HuiZhangDB/HuiZhangDB.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>b.安装Hexo的Git部署插件<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="external">hexo-deployer-git</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>c. 现在可以把它发布到GitHub Pages上啦！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean  #清除缓存，在更改主题等后要使用</div><div class="line">$ hexo g      #生成静态文件</div><div class="line">$ hexo d      #部署网站</div></pre></td></tr></table></figure>
<p>d. 在浏览器输入<code>http://myusername.github.io</code>可以看到自己的博客啦~</p>
<p>Step.5 自定义Hexo主题<br><a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo模板</a>中有许多好看的模板可以选择，我选择了简洁好看的<a href="https://github.com/ahonn/hexo-theme-even" target="_blank" rel="external">even</a>主题。它的<a href="https://github.com/ahonn/hexo-theme-even/wiki" target="_blank" rel="external">主题文档</a>很详细地写了设置步骤，这里不再赘述。</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><ol>
<li>购买域名</li>
<li>选择一个DNS解析服务器</li>
<li><p>域名解析到<code>myusrname.github.io</code>，以及Github Pages提供的IP:   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">192.30.252.153</div><div class="line">192.30.252.154</div></pre></td></tr></table></figure>
</li>
<li><p>在本地站点的<code>source</code>文件夹中创建<code>CNAME</code>文件，填写域名（不加http://）</p>
</li>
<li>将本地站点部署更新到Github Pages</li>
<li>等待DNS解析生效</li>
<li>可以在浏览器输入自己的域名查看博客啦！</li>
</ol>
<h2 id="可以开始写文章啦！"><a href="#可以开始写文章啦！" class="headerlink" title="可以开始写文章啦！"></a>可以开始写文章啦！</h2><p>为了方便管理文章中的图片等资源，可以开启<a href="https://hexo.io/zh-cn/docs/asset-folders.html" target="_blank" rel="external">Hexo的资源文件管理功能</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#将站点配置文件_config.yml中的post_asset_folder选项设为true来打开</div><div class="line">post_asset_folder: true</div></pre></td></tr></table></figure>
<p>接下来就可以开始自由写作啦~</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo new (post) title</div><div class="line">...writing</div><div class="line">$ hexo clean</div><div class="line">$ hexo d -g</div></pre></td></tr></table></figure>
<p>为了方便文章管理，Hexo提供了可视化写作插件<a href="https://github.com/nihgwu/hexo-hey" target="_blank" rel="external">hey</a>，优点是可以拖拽图片，缺点是不方便随时写作。  </p>
<h2 id="第三方服务设置"><a href="#第三方服务设置" class="headerlink" title="第三方服务设置"></a>第三方服务设置</h2><h3 id="给博客添加统计分析"><a href="#给博客添加统计分析" class="headerlink" title="给博客添加统计分析"></a>给博客添加统计分析</h3><p>主题<a href="https://github.com/ahonn/hexo-theme-even" target="_blank" rel="external">even</a>提供了对于百度统计和Google统计的支持，只需要修改主题配置文件中的<code>baidu_analytics</code>或<code>google_analytics</code>字段，填写<code>analytics id</code>就可以开启统计。</p>
<p>例如开启百度统计：<br>step1. 在百度统计网站注册账号<br>step2. 添加自有网站<br>step3. 获取统计代码，得到其中的<code>baidu analytics id</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">var</span> _hmt = _hmt || [];</div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> hm = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</div><div class="line">  hm.src = <span class="string">"https://hm.baidu.com/hm.js?this_code_is_the_baidu_analysis_id"</span>;</div><div class="line">  <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>]; </div><div class="line">  s.parentNode.insertBefore(hm, s);</div><div class="line">&#125;)();</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>step4. 将<code>baidu analytics id</code>填入主题配置文件的<code>baidu_analytics</code>字段。<br>step5. 百度统计网站上检查代码成功，过一会就可以查看分析报告啦！</p>
<h3 id="给博客添加评论服务"><a href="#给博客添加评论服务" class="headerlink" title="给博客添加评论服务"></a>给博客添加评论服务</h3><p>主题<a href="https://github.com/ahonn/hexo-theme-even" target="_blank" rel="external">even</a>提供了对于多说、Disqus和网易云跟帖的支持，由于多说即将关闭，本博客选择使用网易云跟帖。</p>
<ol>
<li>在<a href="https://gentie.163.com/" target="_blank" rel="external">网易云跟帖</a>注册账号，进入后台管理，设置站点信息，获取代码；</li>
<li>修改主题配置文件中的<code>netease_key</code>字段，开启网易云跟帖；</li>
<li>对于不开启评论的页面，文件头添加<code>comments</code>字段，设置为<code>false</code>。</li>
</ol>
<p>网站部署更新后可以看到评论啦。</p>
<h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>HuisBlog博客搭建过程主要参考<a href="http://www.jianshu.com/p/834d7cc0668d" target="_blank" rel="external">水瓶座iOSer的简书</a>，在此提出感谢。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;博客站点迁移&quot;&gt;&lt;a href=&quot;#博客站点迁移&quot; class=&quot;headerlink&quot; title=&quot;博客站点迁移&quot;&gt;&lt;/a&gt;博客站点迁移&lt;/h1&gt;&lt;p&gt;阿里云服务器快要到期不想再续，遂决定将博客迁移到免费的&lt;code&gt;GitHub Pages&lt;/code&gt;上。&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Github Pages&lt;/code&gt;+&lt;code&gt;Hexo&lt;/code&gt;(不使用&lt;code&gt;Jekyll&lt;/code&gt;是因为没有找到好看的主题)  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在GitHub上创建&lt;code&gt;GitHub Pages&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置本地&lt;code&gt;Hexo&lt;/code&gt;环境，并与&lt;code&gt;GitHub Pages&lt;/code&gt;绑定&lt;/li&gt;
&lt;li&gt;绑定域名&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="博客" scheme="http://huisblog.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="github" scheme="http://huisblog.cn/tags/github/"/>
    
      <category term="hexo" scheme="http://huisblog.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Python2.7 基础学习笔记</title>
    <link href="http://huisblog.cn/2016/12/26/Python/index/"/>
    <id>http://huisblog.cn/2016/12/26/Python/index/</id>
    <published>2016-12-26T15:50:33.000Z</published>
    <updated>2017-04-27T05:37:50.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Python基础学习</p>
<blockquote>
<ul>
<li><a href="/2016/12/02/Python/PythonBasis/" title="语法基础与高级特性">语法基础与高级特性</a>  </li>
<li><a href="/2016/12/04/Python/PythonFunction/" title="函数式编程">函数式编程</a>  </li>
<li><a href="/2016/12/05/Python/PythonModule/" title="模块">模块</a></li>
<li><a href="/2016/12/06/Python/PythonOOP/" title="面向对象编程">面向对象编程</a></li>
<li><a href="/2016/12/06/Python/PythonAdOOP/" title="面向对象高级编程">面向对象高级编程</a>    </li>
<li><a href="/2016/12/06/Python/PythonDebug/" title="错误、调试与测试">错误、调试与测试</a></li>
<li><a href="/2016/12/06/Python/PythonIO/" title="IO编程">IO编程</a></li>
<li><a href="/2016/12/06/Python/PythonRE/" title="正则表达式">正则表达式</a>  </li>
<li><a href="/2016/12/26/Python/Socket/" title="Socket通信">Socket通信</a> </li>
<li><a href="/2016/12/26/Python/PythonWeb/" title="Web简介">Web简介</a> </li>
<li><a href="/2016/12/06/Python/PythonTips/" title="Python小贴士">Python小贴士</a> 
</li>
</ul>
</blockquote>
</blockquote>
<font color="#F79159"><strong>感谢网上恩师<a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="external">廖雪峰老师的Python教程</a>。</strong> </font>

]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Python基础学习&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/12/02/Python/PythonBasis/&quot; title=&quot;语法基础与高级特性&quot;&gt;语法基础与高级特性&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a
    
    </summary>
    
      <category term="Python基础" scheme="http://huisblog.cn/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="python" scheme="http://huisblog.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>矩阵运算</title>
    <link href="http://huisblog.cn/2016/12/26/Python/PythonMat/"/>
    <id>http://huisblog.cn/2016/12/26/Python/PythonMat/</id>
    <published>2016-12-26T15:50:31.000Z</published>
    <updated>2017-04-27T03:10:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Python的<code>numpy</code>模块提供矩阵运算的功能，其中有两种不同的数据类型<code>matrix</code>和<code>array</code>都可以用于处理行列表示的数字元素。虽然它们看起来相似，但是在这两个数据类型上执行相同的数学运算可以得到不同的结果，其中<code>matrix</code>与MATLAB中的<code>matrices</code>等价。</p>
<p>具体来说，<code>matrix</code>是<code>array</code>的子类，要求维数必须为2。需要注意的是<code>array</code>的<code>*</code>表示元素分别相乘，<code>dot</code>才表示矩阵点乘。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python的&lt;code&gt;numpy&lt;/code&gt;模块提供矩阵运算的功能，其中有两种不同的数据类型&lt;code&gt;matrix&lt;/code&gt;和&lt;code&gt;array&lt;/code&gt;都可以用于处理行列表示的数字元素。虽然它们看起来相似，但是在这两个数据类型上执行相同的数学运算可以得
    
    </summary>
    
      <category term="Python基础" scheme="http://huisblog.cn/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="python" scheme="http://huisblog.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Socket通信</title>
    <link href="http://huisblog.cn/2016/12/26/Python/Socket/"/>
    <id>http://huisblog.cn/2016/12/26/Python/Socket/</id>
    <published>2016-12-26T08:32:19.000Z</published>
    <updated>2017-04-27T05:21:18.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<h2 id="socket中TCP的三次握手建立连接"><a href="#socket中TCP的三次握手建立连接" class="headerlink" title="socket中TCP的三次握手建立连接"></a>socket中TCP的三次握手建立连接</h2><img src="/2016/12/26/Python/Socket/tcpsend.png" alt="tcpsend.png" title="">
<h2 id="socket中TCP的四次握手释放连接"><a href="#socket中TCP的四次握手释放连接" class="headerlink" title="socket中TCP的四次握手释放连接"></a>socket中TCP的四次握手释放连接</h2><img src="/2016/12/26/Python/Socket/tcpend.png" alt="tcpend.png" title="">
<p>TCP客户端和服务器端通信例子： </p>
<ul>
<li><a href="/2016/12/26/Python/Socket/tcp_client.py" title="客户端">客户端</a></li>
<li><a href="/2016/12/26/Python/Socket/tcp_server.py" title="服务器端">服务器端</a>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;socket中TCP的三次握手建立连接&quot;&gt;&lt;a href=&quot;#socket中TCP的三次握手建立连接&quot; class=&quot;headerlink&quot; title=&quot;socket中TCP的三次握手建立连接&quot;&gt;&lt;/a&gt;socket中TCP的
    
    </summary>
    
      <category term="Python基础" scheme="http://huisblog.cn/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="python" scheme="http://huisblog.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python Web</title>
    <link href="http://huisblog.cn/2016/12/26/Python/PythonWeb/"/>
    <id>http://huisblog.cn/2016/12/26/Python/PythonWeb/</id>
    <published>2016-12-26T08:32:19.000Z</published>
    <updated>2017-04-27T03:08:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h2><p>HTML定义了页面的内容，CSS控制了页面元素的样式，而JavaScript负责页面的交互逻辑。</p>
<a id="more"></a>
<h2 id="WSGI-Web-Server-Gateway-Interface"><a href="#WSGI-Web-Server-Gateway-Interface" class="headerlink" title="WSGI(Web Server Gateway Interface)"></a>WSGI(Web Server Gateway Interface)</h2><p>处理TCP连接，HTTP原始请求和相应格式。</p>
<p>无论多么复杂的Web应用程序，入口都是一个WISG处理函数。HTTP请求的所有输入信息都可以通过<code>environ</code>获得，HTTP响应的输出都可以通过<code>start_response()</code>加上函数返回值作为Body。</p>
<h2 id="使用Web框架"><a href="#使用Web框架" class="headerlink" title="使用Web框架"></a>使用Web框架</h2><p>实现url到函数的映射</p>
<h2 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h2><p>Model-View-Controller，”模型-视图-控制器“。</p>
<p>最大限度分离Python代码和HTML代码</p>
<p><strong>感谢网上恩师<a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="external">廖雪峰老师的Python教程</a>，本文大部分内容都摘自于此。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML简介&quot;&gt;&lt;a href=&quot;#HTML简介&quot; class=&quot;headerlink&quot; title=&quot;HTML简介&quot;&gt;&lt;/a&gt;HTML简介&lt;/h2&gt;&lt;p&gt;HTML定义了页面的内容，CSS控制了页面元素的样式，而JavaScript负责页面的交互逻辑。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础" scheme="http://huisblog.cn/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="python" scheme="http://huisblog.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python进程和线程</title>
    <link href="http://huisblog.cn/2016/12/06/Python/PythonMulTask/"/>
    <id>http://huisblog.cn/2016/12/06/Python/PythonMulTask/</id>
    <published>2016-12-06T03:05:07.000Z</published>
    <updated>2017-04-27T02:52:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h2><p>先略过多任务部分。。蓝瘦香菇。。</p>
<p><strong>感谢网上恩师<a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="external">廖雪峰老师的Python教程</a>，本文大部分内容都摘自于此。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;多进程&quot;&gt;&lt;a href=&quot;#多进程&quot; class=&quot;headerlink&quot; title=&quot;多进程&quot;&gt;&lt;/a&gt;多进程&lt;/h2&gt;&lt;p&gt;先略过多任务部分。。蓝瘦香菇。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;感谢网上恩师&lt;a href=&quot;http://www.liaoxuef
    
    </summary>
    
      <category term="Python基础" scheme="http://huisblog.cn/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="python" scheme="http://huisblog.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python面向对象高级编程</title>
    <link href="http://huisblog.cn/2016/12/06/Python/PythonAdOOP/"/>
    <id>http://huisblog.cn/2016/12/06/Python/PythonAdOOP/</id>
    <published>2016-12-06T03:05:07.000Z</published>
    <updated>2017-04-27T03:05:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实例动态绑定"><a href="#实例动态绑定" class="headerlink" title="实例动态绑定"></a>实例动态绑定</h2><p>通常情况下，我们可以给实例绑定任何属性和方法，这就是动态语言的灵活性。但是给一个实例绑定的方法对另一个实例是不起作用的。为了给所有实例都绑定方法，可以给class绑定方法。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">addmethod</span><span class="params">(self)</span>:</span></div><div class="line">	<span class="keyword">pass</span></div><div class="line">	</div><div class="line">Student.addmethod = MethodType(addmethod,<span class="keyword">None</span>,Student)</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>如果想要限制class的属性，可以使用特殊变量<code>__slots__</code>来限制该class能添加的属性：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></div><div class="line"><span class="meta">... </span>    __slots__ = (<span class="string">'name'</span>,<span class="string">'age'</span>)<span class="comment">#用tuple定义允许绑定的属性名称</span></div><div class="line"><span class="meta">... </span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student()</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.name = <span class="string">'Micheal'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.age = <span class="number">8</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.score = <span class="number">90</span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">AttributeError: <span class="string">'Student'</span> object has no attribute <span class="string">'score'</span></div></pre></td></tr></table></figure>
<p>需要注意的是，<code>__score__</code>中定义的属性仅对当前类起作用，对继承的子类是不起作用的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">GraduateStudent</span><span class="params">(Student)</span>:</span></div><div class="line"><span class="meta">... </span>    <span class="keyword">pass</span></div><div class="line"><span class="meta">... </span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>g = GraduateStudent()</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>g.score = <span class="number">99</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>g.score</div><div class="line"><span class="number">99</span></div></pre></td></tr></table></figure>
<h2 id="使用-property"><a href="#使用-property" class="headerlink" title="使用@property"></a>使用@property</h2><p><code>@property</code>是Python内置的一个装饰器，可以把一个getter方法变成属性，同时还会创建另一个装饰器<code>@xxx.setter</code>，负责把一个setter方法变成属性赋值，这样我们就拥有了一个可控的属性操作。如果只定义getter方法而不定义setter方法就会得到一个只读属性。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></div><div class="line"><span class="meta">... </span>    @property</div><div class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self)</span>:</span></div><div class="line"><span class="meta">... </span>            <span class="keyword">return</span> self._score</div><div class="line"><span class="meta">... </span>    @score.setter</div><div class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self,value)</span>:</span></div><div class="line"><span class="meta">... </span>            <span class="keyword">if</span> <span class="keyword">not</span> isinstance(value,int):</div><div class="line"><span class="meta">... </span>                    <span class="keyword">raise</span> ValueError(<span class="string">'score must be an integer'</span>)</div><div class="line"><span class="meta">... </span>            <span class="keyword">if</span> value&lt;<span class="number">0</span> <span class="keyword">or</span> value&gt;<span class="number">100</span>:</div><div class="line"><span class="meta">... </span>                    <span class="keyword">raise</span> ValueError(<span class="string">'score must between 0~100'</span>)</div><div class="line"><span class="meta">... </span>            self._score = value</div><div class="line"><span class="meta">... </span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student()</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.score = <span class="number">99</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.score</div><div class="line"><span class="number">99</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.score = <span class="number">101</span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">10</span>, <span class="keyword">in</span> score</div><div class="line">ValueError: score must between <span class="number">0</span>~<span class="number">100</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.score = <span class="string">'a'</span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">8</span>, <span class="keyword">in</span> score</div><div class="line">ValueError: score must be an integer</div></pre></td></tr></table></figure>
<p>注意这里的<code>score</code>是一个property对象，getter方法和setter方法重用了这个名字，而<code>_score</code>是私有属性。实际属性值储存在<code>_score</code>中，<code>score</code>则为这个私有变量提供接口。如果混淆了两者就会出现可怕的bug：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></div><div class="line"><span class="meta">... </span>    @property</div><div class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self)</span>:</span></div><div class="line"><span class="meta">... </span>            <span class="keyword">return</span> self.score</div><div class="line"><span class="meta">... </span>    @score.setter</div><div class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self,value)</span>:</span></div><div class="line"><span class="meta">... </span>            <span class="keyword">if</span> <span class="keyword">not</span> isinstance(value,int):</div><div class="line"><span class="meta">... </span>                    <span class="keyword">raise</span> ValueError(<span class="string">'score must be an integer'</span>)</div><div class="line"><span class="meta">... </span>            <span class="keyword">if</span> value&lt;<span class="number">0</span> <span class="keyword">or</span> value&gt;<span class="number">100</span>:</div><div class="line"><span class="meta">... </span>                    <span class="keyword">raise</span> ValueError(<span class="string">'score must between 0~100'</span>)</div><div class="line"><span class="meta">... </span>            self.score = value<span class="comment">#这里会无法停止循环调用score的setter方法</span></div><div class="line"><span class="meta">... </span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student()</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.score = <span class="number">99</span></div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">  ...</div><div class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">11</span>, <span class="keyword">in</span> score</div><div class="line">RuntimeError: maximum recursion depth exceeded</div></pre></td></tr></table></figure>
<h2 id="多重继承"><a href="#多重继承" class="headerlink" title="多重继承"></a>多重继承</h2><p>一个子类可以通过多重继承同时获得多个父类的所有功能。</p>
<h3 id="Mixin"><a href="#Mixin" class="headerlink" title="Mixin"></a>Mixin</h3><p>在设计类的继承关系时，通常主线都是单一继承下来的，例如，<code>Dog</code>继承自<code>Animal</code>。但是，如果需要“混入”额外的功能，通过多重继承就可以实现，比如，让<code>Dog</code>除了继承自<code>Animal</code>之外再同时继承<code>Runnable</code>。这种设计通常称之为<code>Mixin</code>。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal,Runnable)</span>:</span></div><div class="line">	<span class="keyword">pass</span></div></pre></td></tr></table></figure>
<p>为了更好地看出继承关系，我们把<code>Runnable</code>和<code>Flyable</code>改为<code>RunnableMixin</code>和<code>FlyableMixin</code>。类似的，还可以定义出肉食动物<code>CarnivorousMixin</code>和植食动物<code>HerbivoresMixin</code>，让某个动物同时拥有好几个Mixin：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal,RunnableMixin,CarnivorousMixin)</span>:</span></div><div class="line">	<span class="keyword">pass</span></div></pre></td></tr></table></figure>
<p>Mixin的目的就是给一个类增加多个功能，这样在设计类的时候，我们优先考虑通过多重继承来组合多个Mixin的功能，而不是设计多层次的复杂的继承关系。</p>
<p>Python允许使用多重继承，因此Mixin是一种常见设计。而只允许单一继承的语言（如Java）不能使用Mixin的设计。</p>
<h2 id="定制类"><a href="#定制类" class="headerlink" title="定制类"></a>定制类</h2><p>Python中有许多特殊用途的函数可以帮助我们定制类</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">__slots__</div><div class="line">__len__</div><div class="line">__str__</div><div class="line">__repr__</div><div class="line">__iter__</div><div class="line">__getitem__</div><div class="line">__getattr__</div><div class="line">__call__  <span class="comment">#可使用callable()来判断对象是否是“可调用”对象</span></div></pre></td></tr></table></figure>
<h2 id="使用元类"><a href="#使用元类" class="headerlink" title="使用元类"></a>使用元类</h2><p><code>type()</code>既可以返回一个对象的类型，还可以创建出新的类型。<br><code>metaclass</code>允许创建类或者修改类，可以把类看成是metaclass创建出的来的“实例”。</p>
<p><em>正常情况下不会碰到需要使用<code>metaclass</code>的情况，所以现在先略过。</em></p>
<p><strong>感谢网上恩师<a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="external">廖雪峰老师的Python教程</a>，本文大部分内容都摘自于此。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;实例动态绑定&quot;&gt;&lt;a href=&quot;#实例动态绑定&quot; class=&quot;headerlink&quot; title=&quot;实例动态绑定&quot;&gt;&lt;/a&gt;实例动态绑定&lt;/h2&gt;&lt;p&gt;通常情况下，我们可以给实例绑定任何属性和方法，这就是动态语言的灵活性。但是给一个实例绑定的方法对另一个实例是不起作用的。为了给所有实例都绑定方法，可以给class绑定方法。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addmethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student.addmethod = MethodType(addmethod,&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;,Student)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python基础" scheme="http://huisblog.cn/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="python" scheme="http://huisblog.cn/tags/python/"/>
    
  </entry>
  
</feed>
